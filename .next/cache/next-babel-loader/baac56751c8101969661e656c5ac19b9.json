{"ast":null,"code":"var _jsxFileName = \"/Users/Remi/Desktop/blog-mavillaz/components/Link/NextLink.jsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { withRouter } from 'next/router';\nimport Link from 'next/link';\nimport React, { Children } from 'react';\n\nconst NextLink = (_ref) => {\n  let {\n    router,\n    children\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"router\", \"children\"]);\n\n  const child = Children.only(children);\n  return __jsx(Link, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.cloneElement(child, {\n    active: router && router.pathname === props.href,\n    default: !router || router.pathname !== props.href\n  }));\n};\n\nexport default withRouter(NextLink);","map":{"version":3,"sources":["/Users/Remi/Desktop/blog-mavillaz/components/Link/NextLink.jsx"],"names":["withRouter","Link","React","Children","NextLink","router","children","props","child","only","cloneElement","active","pathname","href","default"],"mappings":";;;;;;;;;AAAA,SAASA,UAAT,QAA2B,aAA3B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,QAAQ,GAAG,UAAoC;AAAA,MAAnC;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAAmC;AAAA,MAAZC,KAAY;;AACnD,QAAMC,KAAK,GAAGL,QAAQ,CAACM,IAAT,CAAcH,QAAd,CAAd;AAEA,SAAO,MAAC,IAAD,eAAUC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAkBL,KAAK,CAACQ,YAAN,CAAmBF,KAAnB,EAA0B;AACjDG,IAAAA,MAAM,EAAEN,MAAM,IAAIA,MAAM,CAACO,QAAP,KAAoBL,KAAK,CAACM,IADK;AAEjDC,IAAAA,OAAO,EAAE,CAACT,MAAD,IAAWA,MAAM,CAACO,QAAP,KAAoBL,KAAK,CAACM;AAFG,GAA1B,CAAlB,CAAP;AAKD,CARD;;AAUA,eAAeb,UAAU,CAACI,QAAD,CAAzB","sourcesContent":["import { withRouter } from 'next/router';\nimport Link from 'next/link';\nimport React, { Children } from 'react';\n\nconst NextLink = ({ router, children, ...props }) => {\n  const child = Children.only(children);\n\n  return <Link {...props}>{React.cloneElement(child, {\n    active: router && router.pathname === props.href,\n    default: !router || router.pathname !== props.href,\n\n  })}</Link>;\n};\n\nexport default withRouter(NextLink);\n"]},"metadata":{},"sourceType":"module"}